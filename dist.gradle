// Dependencies
ext.appFlowVersion = '2.0.0-RC6'
ext.fpsVersion = '2.0.0-RC6'
ext.configProviderVersion = '2.0.0-RC6'
//ext.paymentLegacyAppsVersion = '2.0.0-RC3'

configurations {
    apiSamples
    legacyApps
    fps
    configProvider
}

dependencies {
    fps "com.aevi.sdk:flow-processing-service-releaseObfuscated:${fpsVersion}@apk"
    apiSamples "com.aevi.sdk.pos.flow:payment-initiation-sample-release:${appFlowVersion}@apk"
    apiSamples "com.aevi.sdk.pos.flow:payment-service-sample-release:${appFlowVersion}@apk"
    apiSamples "com.aevi.sdk.pos.flow:flow-service-sample-release:${appFlowVersion}@apk"
    configProvider "com.aevi.sdk.pos.flow:developer-config-provider-release:${configProviderVersion}@apk"
    //legacyApps "com.aevi.sdk:payment-flow-legacy-app-release:${paymentLegacyAppsVersion}@apk"
    //legacyApps "com.aevi.sdk:payment-request-legacy-app-release:${paymentLegacyAppsVersion}@apk"
}

task createDeveloperBundle(type: Zip) {

    from("distFiles") {
        into("/")
    }

    from(configurations.fps) {
        into "apks/"
    }

    from(configurations.configProvider) {
        into "apks/"
    }

    from(configurations.apiSamples) {
        into "apks/samples/"
    }

    //from(configurations.legacyApps) {
        //into "apks/legacy/"
    //}

    baseName = "AppFlow-Developer-Bundle-${rootProject.version}"
    destinationDir = new File("build/")
}

apply from: 'publish-repo.gradle'

task publishDeveloperBundleToRelease(type: Exec, dependsOn: createDeveloperBundle) {
    commandLine 'aws', '--region', 'eu-west-1', 's3', 'cp', "build/AppFlow-Developer-Bundle-${rootProject.version}.zip", 's3://sdk-releases.aevi.com/maven2/com/aevi/sdk/pos/flow/appflow-developer-bundle/dists/'
}

task publishDeveloperBundleToQa(type: Exec, dependsOn: createDeveloperBundle) {
    commandLine 'aws', '--region', 'eu-west-1', 's3', 'cp', "build/AppFlow-Developer-Bundle-${rootProject.version}.zip", 's3://sdk-qa.aevi.com/maven2/com/aevi/sdk/pos/flow/appflow-developer-bundle/dists/'
}

